%!PS-Adobe-2.0 EPSF-2.0
%%Title: Amaru_failure_recovery_failedlink.csv-plot.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sat Jul 14 17:56:06 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 626 482
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 2 def
/Landscape false def
/Level1 true def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {1.000 1.000 1.000} def
%
/vshift -240 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 626 50 lineto 626 482 lineto 50 482 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Amaru_failure_recovery_failedlink.csv-plot.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jul 14 17:56:06 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 720 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 11520.00 8640.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 64 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0159 .0317 .0476 .0635 .0794 .0952 .1111 .127 .1429 .1587 .1746 
  .1905 .2063 .2222 .2381 .254 .2698 .2857 .3016 .3175 .3333 .3492 .3651 
  .381 .3968 .4127 .4286 .4444 .4603 .4762 .4921 .5079 .5238 .5397 .5556 
  .5714 .5873 .6032 .619 .6349 .6508 .6667 .6825 .6984 .7143 .7302 .746 
  .7619 .7778 .7937 .8095 .8254 .8413 .8571 .873 .8889 .9048 .9206 .9365 
  .9524 .9683 .9841 1 ] def
/RedA [.1192 .1359 .1546 .1717 .1873 .202 .2159 .229 .2415 .2533 .2645 
  .2751 .2852 .2947 .3038 .3124 .3207 .3286 .3364 .3439 .3513 .3585 .3657 
  .3729 .38 .387 .3941 .4011 .4081 .415 .4219 .4289 .436 .4433 .451 .4591 
  .468 .4776 .4881 .4996 .5118 .5248 .5385 .5526 .567 .5818 .5967 .6118 
  .6269 .6419 .6569 .6718 .6865 .701 .7153 .7293 .743 .7566 .7701 .784 .7986 
  .8143 .831 .8484 ] def
/GreenA [.1192 .1359 .1546 .1717 .1873 .202 .2159 .229 .2415 .2533 .2645 
  .2751 .2852 .2947 .3038 .3124 .3207 .3286 .3364 .3439 .3513 .3585 .3657 
  .3729 .38 .387 .3941 .4011 .4081 .415 .4219 .4289 .436 .4433 .451 .4591 
  .468 .4776 .4881 .4996 .5118 .5248 .5385 .5526 .567 .5818 .5967 .6118 
  .6269 .6419 .6569 .6718 .6865 .701 .7153 .7293 .743 .7566 .7701 .784 .7986 
  .8143 .831 .8484 ] def
/BlueA [.1192 .1359 .1546 .1717 .1873 .202 .2159 .229 .2415 .2533 .2645 
  .2751 .2852 .2947 .3038 .3124 .3207 .3286 .3364 .3439 .3513 .3585 .3657 
  .3729 .38 .387 .3941 .4011 .4081 .415 .4219 .4289 .436 .4433 .451 .4591 
  .468 .4776 .4881 .4996 .5118 .5248 .5385 .5526 .567 .5818 .5967 .6118 
  .6269 .6419 .6569 .6718 .6865 .701 .7153 .7293 .743 .7566 .7701 .784 .7986 
  .8143 .831 .8484 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
1.00 1.00 1.00 C 1.000 2664 2304 7558 5470 BoxColFill
1.000 UL
LTb
0.00 0.00 0.00 C 2664 2304 M
88 0 V
stroke
0.15 0.15 0.15 C 2232 2304 M
[ [(Helvetica) 720.0 0.0 true true 0 (0)]
] -240.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 2664 3086 M
88 0 V
stroke
0.15 0.15 0.15 C 2232 3086 M
[ [(Helvetica) 720.0 0.0 true true 0 (5)]
] -240.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 2664 3867 M
88 0 V
stroke
0.15 0.15 0.15 C 2232 3867 M
[ [(Helvetica) 720.0 0.0 true true 0 (10)]
] -240.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 2664 4649 M
88 0 V
stroke
0.15 0.15 0.15 C 2232 4649 M
[ [(Helvetica) 720.0 0.0 true true 0 (15)]
] -240.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 2664 5430 M
88 0 V
stroke
0.15 0.15 0.15 C 2232 5430 M
[ [(Helvetica) 720.0 0.0 true true 0 (20)]
] -240.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 2664 6212 M
88 0 V
stroke
0.15 0.15 0.15 C 2232 6212 M
[ [(Helvetica) 720.0 0.0 true true 0 (25)]
] -240.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 2664 6993 M
88 0 V
stroke
0.15 0.15 0.15 C 2232 6993 M
[ [(Helvetica) 720.0 0.0 true true 0 (30)]
] -240.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 2664 7775 M
88 0 V
stroke
0.15 0.15 0.15 C 2232 7775 M
[ [(Helvetica) 720.0 0.0 true true 0 (35)]
] -240.0 MRshow
1.000 UL
LTb
0.00 0.00 0.00 C 8400 2304 M
0 88 V
stroke
8400 1584 M
[ [(Helvetica) 720.0 0.0 true true 0 (30.2)]
] -240.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 10223 2304 M
0 88 V
stroke
10223 1584 M
[ [(Helvetica) 720.0 0.0 true true 0 (39.8)]
] -240.0 MCshow
1.000 UL
LTb
0.00 0.00 0.00 C 1.000 UP
1.000 UL
LTb
0.00 0.00 0.00 C 0.15 0.15 0.15 C 576 5039 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 792.0 0.0 true true 0 (Traffic \(packets/ms\))]
] -264.0 MCshow
grestore
LTb
0.15 0.15 0.15 C 6443 504 M
[ [(Helvetica) 792.0 0.0 true true 0 (Simulation time \(ms\))]
] -264.0 MCshow
LTb
% Begin plot #1
2.000 UP
0.500 UL
LTb
0.00 0.00 0.00 C 2664 2304 M
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
37 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
37 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
38 0 R
0 782 V
stroke 8400 3086 M
38 -782 R
0 2345 V
38 -2345 R
0 1563 V
38 -1563 R
0 3126 V
38 -3126 R
0 3126 V
38 -3126 R
0 2345 V
38 -2345 R
0 3126 V
38 -3126 R
0 3126 V
38 -3126 R
0 2345 V
38 -2345 R
0 4689 V
38 -4689 R
0 2345 V
38 -2345 R
0 2345 V
38 -2345 R
0 1563 V
38 -1563 R
0 2345 V
38 -2345 R
0 2345 V
37 -2345 R
0 3126 V
38 -3126 R
0 3126 V
38 -3126 R
0 3126 V
38 -3126 R
0 3126 V
38 -3126 R
0 5471 V
38 -5471 R
0 3908 V
38 -3908 R
0 1563 V
38 -1563 R
0 3126 V
38 -3126 R
0 2345 V
38 -2345 R
0 3126 V
38 -3126 R
0 3908 V
38 -3908 R
0 3126 V
38 -3126 R
0 4689 V
38 -4689 R
0 1563 V
38 -1563 R
0 3908 V
38 -3908 R
0 2345 V
38 -2345 R
0 3908 V
38 -3908 R
0 3908 V
38 -3908 R
0 3908 V
38 -3908 R
0 2345 V
38 -2345 R
0 3908 V
38 -3908 R
0 2345 V
38 -2345 R
0 1563 V
38 -1563 R
0 2345 V
38 -2345 R
0 4689 V
38 -4689 R
0 3908 V
38 -3908 R
0 3908 V
38 -3908 R
0 2345 V
38 -2345 R
0 3908 V
38 -3908 R
0 2345 V
38 -2345 R
0 3126 V
38 -3126 R
0 2345 V
38 -2345 R
0 3908 V
% End plot #1
% Begin plot #2
0.333 UP
stroke
LTb
0.00 0.00 0.00 C 2664 2304 Circle
2702 2304 Circle
2740 2304 Circle
2778 2304 Circle
2816 2304 Circle
2854 2304 Circle
2892 2304 Circle
2930 2304 Circle
2968 2304 Circle
3006 2304 Circle
3044 2304 Circle
3082 2304 Circle
3120 2304 Circle
3158 2304 Circle
3196 2304 Circle
3234 2304 Circle
3272 2304 Circle
3310 2304 Circle
3348 2304 Circle
3386 2304 Circle
3424 2304 Circle
3462 2304 Circle
3500 2304 Circle
3538 2304 Circle
3576 2304 Circle
3614 2304 Circle
3652 2304 Circle
3690 2304 Circle
3728 2304 Circle
3766 2304 Circle
3804 2304 Circle
3842 2304 Circle
3880 2304 Circle
3918 2304 Circle
3955 2304 Circle
3993 2304 Circle
4031 2304 Circle
4069 2304 Circle
4107 2304 Circle
4145 2304 Circle
4183 2304 Circle
4221 2304 Circle
4259 2304 Circle
4297 2304 Circle
4335 2304 Circle
4373 2304 Circle
4411 2304 Circle
4449 2304 Circle
4487 2304 Circle
4525 2304 Circle
4563 2304 Circle
4601 2304 Circle
4639 2304 Circle
4677 2304 Circle
4715 2304 Circle
4753 2304 Circle
4791 2304 Circle
4829 2304 Circle
4867 2304 Circle
4905 2304 Circle
4943 2304 Circle
4981 2304 Circle
5019 2304 Circle
5057 2304 Circle
5095 2304 Circle
5133 2304 Circle
5171 2304 Circle
5209 2304 Circle
5247 2304 Circle
5285 2304 Circle
5323 2304 Circle
5361 2304 Circle
5399 2304 Circle
5437 2304 Circle
5475 2304 Circle
5513 2304 Circle
5551 2304 Circle
5589 2304 Circle
5627 2304 Circle
5665 2304 Circle
5703 2304 Circle
5741 2304 Circle
5779 2304 Circle
5817 2304 Circle
5855 2304 Circle
5893 2304 Circle
5931 2304 Circle
5969 2304 Circle
6007 2304 Circle
6045 2304 Circle
6083 2304 Circle
6121 2304 Circle
6159 2304 Circle
6197 2304 Circle
6235 2304 Circle
6273 2304 Circle
6311 2304 Circle
6349 2304 Circle
6387 2304 Circle
6425 2304 Circle
6462 2304 Circle
6500 2304 Circle
6538 2304 Circle
6576 2304 Circle
6614 2304 Circle
6652 2304 Circle
6690 2304 Circle
6728 2304 Circle
6766 2304 Circle
6804 2304 Circle
6842 2304 Circle
6880 2304 Circle
6918 2304 Circle
6956 2304 Circle
6994 2304 Circle
7032 2304 Circle
7070 2304 Circle
7108 2304 Circle
7146 2304 Circle
7184 2304 Circle
7222 2304 Circle
7260 2304 Circle
7298 2304 Circle
7336 2304 Circle
7374 2304 Circle
7412 2304 Circle
7450 2304 Circle
7488 2304 Circle
7526 2304 Circle
7564 2304 Circle
7602 2304 Circle
7640 2304 Circle
7678 2304 Circle
7716 2304 Circle
7754 2304 Circle
7792 2304 Circle
7830 2304 Circle
7868 2304 Circle
7906 2304 Circle
7944 2304 Circle
7982 2304 Circle
8020 2304 Circle
8058 2304 Circle
8096 2304 Circle
8134 2304 Circle
8172 2304 Circle
8210 2304 Circle
8248 2304 Circle
8286 2304 Circle
8324 2304 Circle
8362 2304 Circle
8400 3086 Circle
8438 4649 Circle
8476 3867 Circle
8514 5430 Circle
8552 5430 Circle
8590 4649 Circle
8628 5430 Circle
8666 5430 Circle
8704 4649 Circle
8742 6993 Circle
8780 4649 Circle
8818 4649 Circle
8856 3867 Circle
8894 4649 Circle
8932 4649 Circle
8969 5430 Circle
9007 5430 Circle
9045 5430 Circle
9083 5430 Circle
9121 7775 Circle
9159 6212 Circle
9197 3867 Circle
9235 5430 Circle
9273 4649 Circle
9311 5430 Circle
9349 6212 Circle
9387 5430 Circle
9425 6993 Circle
9463 3867 Circle
9501 6212 Circle
9539 4649 Circle
9577 6212 Circle
9615 6212 Circle
9653 6212 Circle
9691 4649 Circle
9729 6212 Circle
9767 4649 Circle
9805 3867 Circle
9843 4649 Circle
9881 6993 Circle
9919 6212 Circle
9957 6212 Circle
9995 4649 Circle
10033 6212 Circle
10071 4649 Circle
10109 5430 Circle
10147 4649 Circle
10185 6212 Circle
% End plot #2
% Begin plot #3
2.000 UP
0.500 UL
LTb
0.00 0.00 0.00 C 2664 2304 M
7559 0 V
% End plot #3
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UP
0.500 UL
LTb
0.15 0.15 0.15 C 2664 2304 M
7559 0 V
stroke
LTb
0.15 0.15 0.15 C 2664 2304 M
0 5471 V
stroke
1.000 UL
LTb
0.00 0.00 0.00 C grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
